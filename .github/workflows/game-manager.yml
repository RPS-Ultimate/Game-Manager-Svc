# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    defaults:
      run:
        working-directory: ./
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2.3.1
      - run: dotnet build
  
  test:
      defaults:
        run:
          working-directory: ./GameManager-Tests
      runs-on: ubuntu-20.04
      steps:
        - uses: actions/checkout@v2.3.1
        - run: dotnet test -p:CollectCoverage=true -p:CoverletOutputFormat=opencover
  
  analyze:
      defaults:
        run:
          working-directory: ./GameManager-Tests
      needs: [build, test]
      runs-on: ubuntu-20.04
      steps:
        - uses: actions/checkout@v2.3.1
        - run: git fetch --unshallow
        - run: dotnet tool install --global dotnet-sonarscanner
        - run: | 
            dotnet sonarscanner begin -o:"rps-ultimate" -k:"RPS-Ultimate_Game-Manager-Svc" -d:sonar.login="${{ secrets.SONAR_TOKEN }}" -d:sonar.host.url='https://sonarcloud.io/'
            dotnet build
            dotnet test -p:CollectCoverage=true -p:CoverletOutputFormat=opencover --logger trx
            dotnet sonarscanner end -d:sonar.login="${{ secrets.SONAR_TOKEN }}"
          env: 
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  package:
      defaults:
        run:
          working-directory: ./GameManager
      env:
        DOCKER_LOGIN: ${{ secrets.DOCKER_LOGIN }}
        DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
      needs: [analyze_api]
      runs-on: ubuntu-20.04
      steps:
        - uses: actions/checkout@v2.3.1
        - run: docker login --username ${DOCKER_LOGIN} --password ${DOCKER_TOKEN}
        - run: docker image build -t game-manager-svc .
        - run: docker image tag game-manager-svc hdhopson/game-manager-svc
        - run: docker image push hdhopson/game-manager-svc
        - run: docker logout

    # # Steps represent a sequence of tasks that will be executed as part of the job
    # steps:
    #   # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    #   - uses: actions/checkout@v2

    #   # Runs a single command using the runners shell
    #   - name: Run a one-line script
    #     run: echo Hello, world!

    #   # Runs a set of commands using the runners shell
    #   - name: Run a multi-line script
    #     run: |
    #       echo Add other actions to build,
    #       echo test, and deploy your project.
